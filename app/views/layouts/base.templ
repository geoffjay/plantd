package layouts

import "context"

templ head(title string) {
	<head>
		<meta charset="utf-8"/>
		<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
		<meta name="viewport" content="width=device-width,initial-scale=1.0"/>
		<meta name="theme-color" content="#000000"/>
		<meta name="description" content="plantd web application"/>
		<meta name="referrer" content="origin"/>
		<link rel="icon" href="/public/favicon.ico"/>
		<link rel="manifest" href="/public/manifest.json"/>
		<link href="/public/css/tailwind.css" rel="stylesheet"/>
		<!-- Datastar - replaces HTMX and Alpine.js -->
		<script type="module" src="https://cdn.jsdelivr.net/gh/starfederation/datastar@v1.0.0-beta.11/bundles/datastar.js"></script>
		<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"/>
		<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@animxyz/core"/>
		<!-- shoelace web components -->
		<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@shoelace-style/shoelace@2.13.1/cdn/themes/light.css"/>
		<script type="module" src="https://cdn.jsdelivr.net/npm/@shoelace-style/shoelace@2.13.1/cdn/shoelace-autoloader.js"></script>
		if title != "" {
			<title>Plantd - { title }</title>
		} else {
			<title>Plantd</title>
		}
	</head>
}

func title(ctx context.Context) string {
	value := ctx.Value("title")
	if value != nil {
		return value.(string)
	}
	return ""
}

templ hotReload() {
	<script type="text/hyperscript">
		eventsource ReloadEvents from https://localhost:8443/sse
			on message as string
				log it
			end

			on open
				log "connection opened"
			end

			on close
        		log "connection closed"
    		end

    		on error
				log it
			end
		end
	</script>
}

templ Base(contents templ.Component) {
	<!DOCTYPE html>
	<html lang="en">
		@head(title(ctx))
		<body class="h-screen">
			@contents
		</body>
	</html>
}
