package pages

import (
	"fmt"
	"github.com/geoffjay/plantd/app/views/layouts"
	"github.com/geoffjay/plantd/app/views/components"
)

// DashboardData represents the data structure for dashboard rendering.
// This is defined here to match the handler expectations.
type DashboardData struct {
	User             interface{}               `json:"user"`
	SystemHealth     interface{}               `json:"system_health"`
	Services         []interface{}             `json:"services"`
	Metrics          interface{}               `json:"metrics"`
	ServiceCount     int                       `json:"service_count"`
	HealthStatus     string                    `json:"health_status"`
	RequestRate      string                    `json:"request_rate"`
	Uptime           string                    `json:"uptime"`
	HealthComponents map[string]interface{}    `json:"health_components"`
	PerformanceData  interface{}               `json:"performance_data"`
}

templ Dashboard(data *DashboardData) {
	@layouts.Base(dashboardContents(data))
}

templ dashboardContents(data *DashboardData) {
	<div class="min-h-screen bg-gray-50">
		@components.Header()
		
		<div class="flex">
			@components.Sidenav()
			
			<main class="flex-1 p-6" data-testid="main-nav">
				<!-- Connection Status Indicator -->
				<div id="connection-status" class="connection-indicator disconnected">Connecting...</div>
				
				<div class="mb-6 flex items-center justify-between">
					<div>
						<h1 class="text-2xl font-bold text-gray-900">Dashboard</h1>
						<p class="text-gray-600">System overview and status</p>
					</div>
					<div class="text-sm text-gray-500">
						<span id="last-updated">Last updated: Loading...</span>
					</div>
				</div>
				
				<!-- Metrics Cards -->
				<div class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-4 gap-6 mb-8">
					<div class="bg-white rounded-lg shadow p-6" data-testid="metric-services">
						<div class="flex items-center">
							<div class="flex-shrink-0">
								<div class="w-8 h-8 bg-blue-100 rounded-md flex items-center justify-center">
									<svg class="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
									</svg>
								</div>
							</div>
							<div class="ml-4">
								<p class="text-sm font-medium text-gray-500">Services</p>
								<p id="service-count" class="text-2xl font-semibold text-gray-900" data-testid="metric-value">{ fmt.Sprintf("%d", data.ServiceCount) }</p>
							</div>
						</div>
					</div>
					
					<div class="bg-white rounded-lg shadow p-6">
						<div class="flex items-center">
							<div class="flex-shrink-0">
								<div class="w-8 h-8 bg-green-100 rounded-md flex items-center justify-center">
									<svg class="w-5 h-5 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path>
									</svg>
								</div>
							</div>
							<div class="ml-4">
								<p class="text-sm font-medium text-gray-500">Health</p>
								<p id="health-status" class="text-2xl font-semibold text-gray-900 capitalize">{ data.HealthStatus }</p>
							</div>
						</div>
					</div>
					
					<div class="bg-white rounded-lg shadow p-6">
						<div class="flex items-center">
							<div class="flex-shrink-0">
								<div class="w-8 h-8 bg-purple-100 rounded-md flex items-center justify-center">
									<svg class="w-5 h-5 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
									</svg>
								</div>
							</div>
							<div class="ml-4">
								<p class="text-sm font-medium text-gray-500">Requests/sec</p>
								<p id="request-rate" class="text-2xl font-semibold text-gray-900">{ data.RequestRate }</p>
							</div>
						</div>
					</div>
					
					<div class="bg-white rounded-lg shadow p-6">
						<div class="flex items-center">
							<div class="flex-shrink-0">
								<div class="w-8 h-8 bg-indigo-100 rounded-md flex items-center justify-center">
									<svg class="w-5 h-5 text-indigo-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
									</svg>
								</div>
							</div>
							<div class="ml-4">
								<p class="text-sm font-medium text-gray-500">Uptime</p>
								<p id="system-uptime" class="text-2xl font-semibold text-gray-900">{ data.Uptime }</p>
							</div>
						</div>
					</div>
				</div>
				
				<!-- Services and Health Section -->
				<div class="grid grid-cols-1 xl:grid-cols-2 gap-8">
					<!-- Service Status -->
					<div class="bg-white rounded-lg shadow p-6">
						<h3 class="text-lg font-medium text-gray-900 mb-4">Service Status</h3>
						if len(data.Services) > 0 {
							<div class="space-y-3">
								for i, _ := range data.Services {
									<div class="flex items-center justify-between p-3 bg-gray-50 rounded-md">
										<div class="flex items-center">
											<div class="w-3 h-3 bg-green-400 rounded-full mr-3"></div>
											<span class="font-medium text-gray-900">{ fmt.Sprintf("Service %d", i+1) }</span>
										</div>
										<div class="text-sm text-gray-500">Active</div>
									</div>
								}
							</div>
						} else {
							<div class="text-center py-8">
								<svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
								</svg>
								<p class="mt-2 text-sm text-gray-500">No services available</p>
							</div>
						}
					</div>
					
					<!-- System Health -->
					<div class="bg-white rounded-lg shadow p-6">
						<h3 class="text-lg font-medium text-gray-900 mb-4">System Health</h3>
						<div class="space-y-4">
							<div class="flex items-center justify-between">
								<span class="text-sm font-medium text-gray-500">Overall Status</span>
								<span class="px-3 py-1 text-xs font-medium bg-green-100 text-green-800 rounded-full capitalize">
									{ data.HealthStatus }
								</span>
							</div>
							
							if data.HealthComponents != nil && len(data.HealthComponents) > 0 {
								for name, _ := range data.HealthComponents {
									<div class="flex items-center justify-between">
										<span class="text-sm text-gray-700">{ name }</span>
										<div class="w-3 h-3 bg-green-400 rounded-full"></div>
									</div>
								}
							} else {
								<div class="text-center py-4">
									<p class="text-sm text-gray-500">Health data loading...</p>
								</div>
							}
						</div>
					</div>
				</div>
				
				<!-- Real-time Metrics -->
				<div class="mt-8">
					<div class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-5 gap-6 mb-8">
						<div class="bg-white rounded-lg shadow p-4">
							<div class="text-sm font-medium text-gray-500">Response Time</div>
							<div id="response-time" class="text-2xl font-semibold text-gray-900 mt-1">-</div>
						</div>
						<div class="bg-white rounded-lg shadow p-4">
							<div class="text-sm font-medium text-gray-500">Error Rate</div>
							<div id="error-rate" class="text-2xl font-semibold text-gray-900 mt-1">-</div>
						</div>
						<div class="bg-white rounded-lg shadow p-4">
							<div class="text-sm font-medium text-gray-500">Memory Usage</div>
							<div id="memory-usage" class="text-2xl font-semibold text-gray-900 mt-1">-</div>
						</div>
						<div class="bg-white rounded-lg shadow p-4">
							<div class="text-sm font-medium text-gray-500">CPU Usage</div>
							<div id="cpu-usage" class="text-2xl font-semibold text-gray-900 mt-1">-</div>
						</div>
						<div class="bg-white rounded-lg shadow p-4">
							<div class="text-sm font-medium text-gray-500">Healthy Services</div>
							<div id="healthy-services" class="text-2xl font-semibold text-gray-900 mt-1">-</div>
						</div>
					</div>
				</div>
				
				<!-- Performance Metrics Chart Area -->
				<div class="mt-8">
					<div class="bg-white rounded-lg shadow p-6">
						<h3 class="text-lg font-medium text-gray-900 mb-4">Performance Metrics</h3>
						<div class="h-64 flex items-center justify-center bg-gray-50 rounded-md">
							<p class="text-gray-500">Performance charts will be displayed here</p>
						</div>
					</div>
				</div>
			</main>
		</div>
	</div>
} 
